
# webhook 要求必须是https
server {
    listen 80;
    server_name your-domain.com; # 替换为您的域名

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name your-domain.com; # 替换实际域名

    # SSL配置
    ssl_certificate     /path/to/your/certificate.crt; # 替换为SSL证书路径
    ssl_certificate_key /path/to/your/private.key;     # 替换为SSL私钥路径

    # SSL安全设置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';

    # 日志配置
    access_log /var/log/nginx/bot-access.log;
    error_log /var/log/nginx/bot-error.log;

    # Telegram Bot Webhook路径配置
    location /webhook {
        proxy_pass http://localhost:8443/webhook; # 替换为程序监听地址
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 确保长连接正常工作
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # 确保请求体正确传递
        proxy_set_header Content-Type $http_content_type;
        proxy_pass_request_headers on;
        proxy_pass_request_body on;
    }

    # 管理/调试API
    location /debug {
        proxy_pass http://localhost:8443/debug;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # 其他辅助路径
    location / {
        return 404;
    }
}
